@model DeclarationDeVol.Models.Declaration

@{
    ViewBag.Title = "Create";
}

<div class="container">
    <div class="row">
        <div class="col-lg-12 col-md-8">

            <h4 class="text-primary fw-bold">Ajout d'une déclaration</h4>


            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Renseignez les champs ci-dessous pour ajouter une déclaration</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.user_id, "user_id", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("user_id", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.user_id, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.user_role, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.user_role,
                              new SelectList(new[] { "Victime", "Temoin" }),
                              "Sélectionner un rôle",
                              new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.user_role, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.objectCat_id, "objectCat_id", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("objectCat_id", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.objectCat_id, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.object_name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.object_name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.object_name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.vol_date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.vol_date, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                    @Html.ValidationMessageFor(model => model.vol_date, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.place, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.place, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.place, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.decl_date, new { @class = "form-control", @Value = DateTime.Now.ToString("yyyy-MM-dd") })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.statut, new { @class = "form-control", @Value = 0 })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.obj_description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.obj_description, new { htmlAttributes = new { @class = "form-control", @rows = 20, @cols = 50 } })
                    @Html.ValidationMessageFor(model => model.obj_description, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <div class="row">
                        <div class="col-md-2">
                            <input type="submit" class="btn btn-success" value="Ajouter" />
                        </div>
                        <div class="col-md-6">
                            <div class="pull-right">
                                @Html.ActionLink("Allez à la liste", "Index", null, new { @class = "btn btn-primary" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
            }

            
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
